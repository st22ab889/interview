=======================================================================磁盘=====================================================================

/dev/sda            # 磁盘
    /dev/sda1       # 对磁盘的分区
    /dev/sda2
/dev/sdb

/dev/hda         # 早期linux对磁盘的命名
/dev/hdb

/dev/nvme0n1     # nvme协议硬盘
/dev/nvme0n2


/dev/sr1         # 光盘协议
/dev/sr2


/dev/vd         # 云服务用的是虚拟磁盘
/dev/xvd        # 同上



# 热插拔磁盘后需要通知到内核
alias scandisk='echo - - - > /sys/class/scsi_host/host0/scan;echo - - - > /sys/class/scsi_host/host1/scan;echo - - - > /sys/class/scsi_host/host2/scan'


使用磁盘空间过程：给磁盘分区 -> 创建文件系统 -> 挂载新的文件系统


=======================================================================分区=====================================================================

分区意义: 优化I/O性能、实现磁盘空间配额限制、提高修复速度、隔离系统和程序、安装多个OS、采用不同文件系统

MBR（了解）: 不支持超过2T的硬盘. 一块硬盘最多有4个主分区，活动分区只有1个,也可以3主分区+1扩展(N个逻辑分区). 扩展分区里面的逻辑分区才能存数据 
    主和扩展分区对应的1-4，/dev/sda1，/dev/sda2，/dev/sda3，/dev/sda4
	逻辑分区从5开始，/dev/sda5
GPT 分区: 支持超2T的硬盘, 取消逻辑分区,支持128个分区,分区后自动就有分区表备份.


BIOS: 系统硬件自检和引导操作系统, 不支持 GPT 分区
UEFI：相当于一个轻量化的操作系统，提供了硬件和操作系统之间的一个接口，提供图形化的操作界面. 支持 GPT 分区,也支持 MBR 分区

BIOS和UEFI运行流程:
	开机 ===>> BIOS初始化 ===>> BIOS自检  ===>> 引导操作系统 ===>> 进入系统
	开机 ===>> UEFI初始化 ===>> 引导操作系统 ===>> 进入系统

分区工具:
    fdisk 	主要管理MBR分区, 新版本也支持对 GPT 的分区
	gdisk 	主要管理GPT分区


blkid /dev/sdb2                     # 用于查看块设备UUID、Label、挂载、文件系统类型等信息 
gdisk -l /dev/sdb                   # 查看一个硬盘的分区详情

lsblk -f                            # 列出块设备, -f 显示详细信息
hexdump -C -n 512 /dev/sdb          # 查看新硬盘查看分区表显示全是 0.  -C 每个字节显示为十六进制和相应的 ASCII 字符; -n 指定前多少字节 	
	
	
=====================================================================文件系统===================================================================
文件系统分类:
	Linux 常用文件系统：
		ext4：(目前主流)ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件(16TB)、最大1EB的文件系统，以及速度的提升。 Ubuntu默认用ext4
		xfs	：SGI，支持最大8EB的文件系统。从centos7开始，红帽就推崇用 xfs。主要特性就是支持的空间大
		swap
		iso9660 光盘
		btrfs（Oracle）	
	Windows 常用文件系统：FAT32、NTFS(微软私有文件系统，linux较高的版本也可以编译内核，让内核能支持NTFS), exFAT
	Unix：FFS（fast）、UFS（unix）、JFS2
	网络文件系统：NFS、CIFS
	集群文件系统：GFS2、OCFS2（oracle）
	分布式文件系统：ceph、fastdfs 等
	RAW, 没有文件系统，直接存在硬盘分好区的空间中，很少见，后期管理很麻烦,只能以二进制形式管理,追求高性能。比如Oracle数据库		
	联合文件系统(docker用),一个目录可以挂载多个分区

Linux的虚拟文件系统: 虚拟文件系统为各种文件系统提供了统一的入口
    用户 ==> 虚拟文件系统(为ext4、xfs等提供统一接口) ==> 文件系统

2种方式查看系统支持的文件系统
    ll /lib/modules/`uname -r`/kernel/fs
    命令行输入 mkfs. 后按tab键.           


dumpe2fs /dev/sdb1      # 查看ext4文件系统的元信息以及状态(dumpe2fs 命令只能看ext系列的文件系统)
xfs_info /dev/sda1      # 查看xfs文件系统的元信息以及状态

=======================================================================挂载=====================================================================

临时挂载：
    mount /dev/sdb1 /mnt/sdb1
    mount /dev/sdb2 /mnt/sdb1           # 同时挂载以最新的为准
    umount /mnt/sdb2                    # 取消挂载后, /dev/sdb1 挂载生效, 相当于栈.  如果有用户正在使用挂载目录，就不能取消挂载

    mount -o ro /dev/sdb1 /mnt/sdb1     # ro 只读挂载
    mount -o remount,rw /mnt/sdb1        # 如果有用户正在使用挂载目录, 也能挂载成功, rw 表示可读可写


持久化挂载, 修改 "/etc/fstab"

一个设备可以同时挂载到多个文件夹上

fuser -v /mnt/sdb1              # 查看是谁在使用这个目录
fuser -km /mnt/sdb1             # 强制停止用户使用这个挂载点


mount                               # 通过查看/etc/mtab文件显示当前已挂载的所有设备
cat /proc/mounts                    # 查看内核追踪到的已挂载的所有设备
findmnt /mnt/music                  # 查看挂载点情况, 可以看到文件夹是否是个挂载点

lsof MOUNT_POINT                    # 查看正在访问指定文件系统的进程
fuser -v MOUNT_POINT                # 同上


挂载不仅可以挂普通的设备, 还可以挂载其它设备，比如还支持文件夹往文件夹上挂载.
    mount -B dataDir/ mountDir/            # 要加上 -B 参数，类似软衔接的效果  
    umount mountDir/                        # 解除挂载

======================================================================swap=====================================================================

swap:交换文件系统，用来缓解内存不足的情况. 工作原理是用硬盘模拟内存，内存中将暂时用不到的数据存到硬盘中！k8s就要求禁用swap.swap缺点是慢

swap是一个分区，分完大小就不能变，不够用需再建一个2G的swap分区
    mkswap /dev/sdb2            # 创建swap文件系统,再此之前要先创建分区
    在 "/etc/fstab" 种添加挂载信息,同时可以指定优先级
    swapon -a                   # 让挂载立即生效, 但必须"/etc/fstab"文件中有相应的swap配置	
    swapon -s                   # 查看更详细的swap信息

禁用swap:
    修改 "/etc/fstab" 文件，注释掉swap配置行
     swapoff -a                 # 立即禁用所有swap    

一个文件也可以提供swap功能     
    dd if=/dev/zero of=/swapfile  bs=1M count=2048
    chmod a= /swapfile
    mkswap /swapfile            # 给这个文件装一个swap文件系统
    #blkid /swapfile
    在"/etc/fstab" 文件中添加配置
    swapon -a
    
    如果放 /swapfile 这个磁盘空间满了, 也可以把 /swapfile 。移到另一块磁盘上. 禁用 -> 移动文件 -> 修改"/etc/fstab" -> 开启swap

 "/proc/sys/vm/swappiness"的值决定了当内存占用达到一定的百分比时，会启用swap分区的空间

====================================================================移动介质===================================================================

光盘（了解），很多服务器现在没有光驱. 光盘淘汰，但是可以将iso盘制作为u盘, 用 Rufus 等工具可以实现
	mount /dev/sr0 /mnt/            # 挂载光驱
	eject                           # 弹出光盘 
	eject -t                        # 弹入光盘
	cp /dev/cdrom /root/centos.iso          # 把光盘内容做成iso镜像
	ll /dev/cdrom                           # cdrom 实际上就是sr0
	mount /data/centos7.iso /media          # 镜像文件可以直接挂载
	mkisofs -r -o /root/etc.iso /etc        # 把/etc 目录打包生成ios文件

USB介质（U盘，移动硬盘）
    tail /var/log/messages -f           # 当 U盘、移动硬盘接入到系统,内核会自动识别出来,日志会有记录
    mount /dev/sdd /mnt/                # 设备名也是以 sd 开头，需要挂载才能访问

    如果U盘的文件系统是fat32格式, 使用"lsblk -f"查看到的格式为 vfat, 实际上就是 fat32.
    fat32文件系统不支持Linux中的权限, 在fat32文件系统里面创建的文件，对大小写也不敏感,权限将显示为 "-rwxr-xr-x",使用 chmod 不能改变权限, 不能使用 chown 改变所有者和所属组
    可以看出权限不是linux系统的功能，是文件系统的功能！

空洞文件
    空洞文件(也称为稀疏文件):有大小但实际上没占空间,是一种特殊文件，虚拟化的时候会用.比如vmvare中创建一个200G的硬盘文件,但实际不占用200G,用的时候才占

    df -h
    dd if=/dev/zero of=bigfile bs=1M count=0 seek=1024      # seek=1024 表示跳过目标文件的前1024M，然后拷贝0个1M
    ll -h bigfile                                           # 显示1G,但并不占用
    df -h

======================================================================raid=====================================================================

raid 解决服务器上的硬盘故障

常用raid方案(级别)：RAID-0,RAID-1,RAID-5, RAID-10, RAID-50, RAID-60

raid 缺点: 不能在线扩容, 需要关机停服务，影响业务！
	
=====================================================================逻辑卷====================================================================

逻辑卷(LVM ：Logical Volume Manager)
    动态扩/缩容！
    允许物理磁盘分区、大小都可以不同！

多块硬盘或者分区创建为物理卷（PV）==> 物理卷组合为卷组（VG） ==> 卷组（VG）分配为逻辑卷（LV）==> 给逻辑卷添加文件系统（xfs或ext）==> 挂载到目录 ==> 用户使用
    VG是个逻辑上的大硬盘，LV是这个大硬盘上分区，用户真正用的是LV
    LV来源于VG，VG的空间来自于真正的磁盘或者分区

yum -y install lvm2                 # 需安装 lvm2 包 

使用 df 看到有 "/dev/mapper/..."     # 说明这是个逻辑卷   

逻辑卷扩容(非常重要), 扩容过程用户不受影响. 扩容前确保卷组的空间是足够的.
卷组扩容(非常重要),增减物理卷(PV),增加物理卷的方式是 增加硬盘 或 增加分区.

逻辑卷缩容(非常重要)，缩容用的非常少，但有公司还是在用。 
    缩减有数据损坏的风险, 建议先备份再缩减, ext系列文件系统支持缩容, xfs文件系统不支持缩容！
    缩容需要离线（离线就是取消挂载），所以缩容会影响生产，缩容要选择用户访问量最少的时段进行！
    xfs不支持缩容，除非把数据导出来，然后删除逻辑卷，再创建逻辑卷.

更换物理卷(了解), 把 sdc 这个 PG 上已使用的PE块搬移到其它PG，只要其它PG上的可用PE块之和大于sdc上已被使用的PE个数即可,其实就是转移数据，PE块中保存的就是数据.

逻辑卷快照: 
    把整个逻辑卷瞬间做备份，将来可以还原数据卷到做快照时的状态，而且还原非常快。主要在测试环境用的比较多！
    照原原理: 快照中只含有原来的逻辑卷中更改的数据或者自生成快照后的快照中更改的数据

 还原快照   
    取消挂载 -> 还原快照 -> 重新挂载

 删除逻辑卷
    先删除逻辑卷 ==> 再删除卷组 ==> 再删除物理卷 ==> 然后可以取走硬盘(如果使用的分区，也可以把分区删了再取走硬盘)

======================================================================swap=====================================================================

